<!DOCTYPE html>

<head>
  <link rel="stylesheet" type="text/css" href="/css/styles.css">
</head> 


<html lang="en">
<head>
    <style>
        table, th, td {
          border: 1px solid black;
        }
    </style>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, intial-scale=1.0">
</head>
<body>
    <h1>California Accidents - SWITRS Data</h1>
    <!-- Buttons + Canvas -->
    <h3>Query 1: Party size vs. Age</h3>
    <div id="chart-wrapper">
      <canvas id="myChart"></canvas>
    </div>
    <div id="button-wrapper">
      <button id="0" type="button" >Previous Query</button>
      <button id="1" type="button" >Next Query</button>
    </div>
    <!-- Scripts for buttons + canvas-->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
      const ctx = document.getElementById('myChart');

      /*
      var getlabels = ["A","B","C","D","E"];
      var getarea = [1,2,3,4,5];
      var getpopulation = [6,7,8,9,10];
      */
      
      // This is all UF data
      var querydata = JSON.parse(`<%- JSON.stringify(mydata) %>`);
      var index = 0;
      var que = querydata[index];

      var getlabels = [];
      var getarea = [];
      var getpopulation = [];

      for(var i = 0; i < que.length; i++) {
        var temp = que[i];
        getlabels.push(temp.AGE);
        getarea.push(temp.AVERAGE);
        getpopulation.push(temp.AVERAGE + 1);
      }
        
      Chart.defaults.font.size = 16;
      var chartvar = new Chart(ctx, {
        type: 'line',
        data: {
          labels: getlabels,
          datasets: [
            {
              label: 'Data 1',
              data: getarea,
              borderWidth: 1
            },
            {
              label: 'Data 2',
              data: getpopulation,
              borderWidth: 1
            }
          ]
        },
        options: {
          animation: {
            x: {
              duration: 500,
              from: 0
            },
            y: {
              duration: 300,
              from: 500
            }
          },
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: {
              title: {
                display: true,
                text: 'Age',
                padding: {
                    top: 10,
                    bottom: 30
                }
              }
            },
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Average party size',
                padding: {
                    top: 5,
                    bottom: 5
                }
              }
            }
            
          }
        }
      });


    // These buttons currently just make the data reverse
    // Will make it properly cycle through stuff later
    
    document.getElementById("0").addEventListener('click', () => {
      console.log("Button 0");
      //temp = getarea.reverse();
      //chartvar.data.datasets[0].data = temp;
      que = querydata[0];
      getlabels.length = 0;
      getarea.length = 0;
      getpopulation.length = 0;
      for(var i = 0; i < que.length; i++) {
        var temp = que[i];
        getlabels.push(temp.AGE);
        getarea.push(temp.AVERAGE);
        getpopulation.push(temp.AVERAGE + 1);
      }
      index = 0;
      chartvar.update();
    })

    document.getElementById("1").addEventListener('click', () => {
      console.log("Button 1");
      //const chart = document.getElementById("myChart");
      //temp = getpopulation.reverse();
      //chartvar.data.datasets[1].data = temp;
      que = querydata[1];
      getlabels.length = 0;
      getarea.length = 0;
      getpopulation.length = 0;
      for(var i = 0; i < que.length; i++) {
        var temp = que[i];
        getlabels.push(temp.AGE);
        getarea.push(temp.AVERAGE);
        getpopulation.push(temp.AVERAGE + 1);
      }
      chartvar.update();
    })

    </script>


</body>
</html>